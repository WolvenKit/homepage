# Simple workflow for deploying static content to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  workflow_dispatch:
  push:
    branches: ["master"]
  schedule:
    - cron: "0 5 * * *"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: build
        env:
          # BASE_PATH: "/${{ github.event.repository.name }}" # Not used because we have custom domain
          ORIGIN: "${{ vars.ORIGIN }}"
          PUBLIC_IMAGE_URL_PREFIX: "${{ vars.PUBLIC_IMAGE_URL_PREFIX }}"
        run: pnpm build

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          # this should match the `pages` option in your adapter-static options
          path: "build/"

  deploy:
    needs: build_site
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  report-failure:
    needs: [build_site, deploy]
    if: |
      always()
      && contains(needs.*.result, 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Report Failure to Webhook
        run: |
          curl -H "Content-Type: application/json" -H "X-GitHub-Event: check_suite" \
          -d '{"action":"completed","sender":{"login":"${{ github.actor }}","id":${{ github.actor_id }},"html_url":"https://github.com/${{ github.actor }}","avatar_url": "https://avatars.githubusercontent.com/u/${{ github.actor_id }}?v=4"},"repository":{"name":"${{ github.event.repository.name }}","id":${{ github.repository_id }},"html_url": "${{ github.repositoryUrl }}","full_name": "${{ github.repository }}"},"check_suite":{"conclusion":"failure","head_sha": "${{ github.sha }}","status": "completed","app":{"name":"GitHub Actions"}}}' \
          ${{ secrets.WEBHOOK_URL }}
